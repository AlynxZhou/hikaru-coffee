// Generated by CoffeeScript 2.3.1
(function() {
  var dateStrCompare, escapeHTML, paginate, paginateCategories, path, sortCategories;

  path = require("path");

  escapeHTML = function(str) {
    return str.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
  };

  paginate = function(page, posts, ctx, perPage) {
    var i, j, k, len, perPagePosts, post, ref, results;
    if (!perPage) {
      perPage = 10;
    }
    results = [];
    perPagePosts = [];
    for (j = 0, len = posts.length; j < len; j++) {
      post = posts[j];
      if (perPagePosts.length === perPage) {
        results.push(Object.assign({}, page, ctx, {
          "posts": perPagePosts
        }));
        perPagePosts = [];
      }
      perPagePosts.push(post);
    }
    results.push(Object.assign({}, page, ctx, {
      "posts": perPagePosts
    }));
    results[0]["pageArray"] = results;
    results[0]["pageIndex"] = 0;
    results[0]["docPath"] = page["docPath"];
    for (i = k = 1, ref = results.length; (1 <= ref ? k < ref : k > ref); i = 1 <= ref ? ++k : --k) {
      results[i]["pageArray"] = results;
      results[i]["pageIndex"] = i;
      results[i]["docPath"] = path.join(path.dirname(page["docPath"]), `${i + 1}.html`);
    }
    return results;
  };

  dateStrCompare = function(a, b) {
    return -(new Date(a["date"]) - new Date(b["date"]));
  };

  sortCategories = function(category) {
    var j, len, ref, results1, sub;
    category["posts"].sort(dateStrCompare);
    category["subs"].sort(function(a, b) {
      return a["name"].localeCompare(b["name"]);
    });
    ref = category["subs"];
    results1 = [];
    for (j = 0, len = ref.length; j < len; j++) {
      sub = ref[j];
      results1.push(sortCategories(sub));
    }
    return results1;
  };

  paginateCategories = function(category, page, parentPath, perPage, ctx) {
    var j, len, p, ref, results, sub;
    results = [];
    p = Object.assign({}, page);
    p["layout"] = "category";
    p["docPath"] = path.join(parentPath, `${category["name"]}`, "index.html");
    category["docPath"] = p["docPath"];
    p["title"] = "category";
    p["name"] = category["name"].toString();
    results = results.concat(paginate(p, category["posts"], ctx, perPage));
    ref = category["subs"];
    for (j = 0, len = ref.length; j < len; j++) {
      sub = ref[j];
      results = results.concat(paginateCategories(sub, page, path.join(parentPath, `${category["name"]}`), perPage, ctx));
    }
    return results;
  };

  module.exports = {
    "escapeHTML": escapeHTML,
    "paginate": paginate,
    "dateStrCompare": dateStrCompare,
    "sortCategories": sortCategories,
    "paginateCategories": paginateCategories
  };

}).call(this);
